#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseStuffer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TvTuner")]
	public partial class TbTunerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEpisode(Episode instance);
    partial void UpdateEpisode(Episode instance);
    partial void DeleteEpisode(Episode instance);
    partial void InsertSeries(Series instance);
    partial void UpdateSeries(Series instance);
    partial void DeleteSeries(Series instance);
    partial void InsertMovy(Movy instance);
    partial void UpdateMovy(Movy instance);
    partial void DeleteMovy(Movy instance);
    #endregion
		
		public TbTunerDataContext() : 
				base(global::DatabaseStuffer.Properties.Settings.Default.TvTunerConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TbTunerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TbTunerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TbTunerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TbTunerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Episode> Episodes
		{
			get
			{
				return this.GetTable<Episode>();
			}
		}
		
		public System.Data.Linq.Table<Series> Series
		{
			get
			{
				return this.GetTable<Series>();
			}
		}
		
		public System.Data.Linq.Table<Movy> Movies
		{
			get
			{
				return this.GetTable<Movy>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Episodes")]
	public partial class Episode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EpisodeID;
		
		private int _SeriesID;
		
		private int _Season;
		
		private int _EpisodeNumber;
		
		private string _Name;
		
		private string _Summary;
		
		private System.Data.Linq.Binary _Thumbnail;
		
		private string _VideoPath;
		
		private EntityRef<Series> _Series;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEpisodeIDChanging(int value);
    partial void OnEpisodeIDChanged();
    partial void OnSeriesIDChanging(int value);
    partial void OnSeriesIDChanged();
    partial void OnSeasonChanging(int value);
    partial void OnSeasonChanged();
    partial void OnEpisodeNumberChanging(int value);
    partial void OnEpisodeNumberChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnThumbnailChanging(System.Data.Linq.Binary value);
    partial void OnThumbnailChanged();
    partial void OnVideoPathChanging(string value);
    partial void OnVideoPathChanged();
    #endregion
		
		public Episode()
		{
			this._Series = default(EntityRef<Series>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EpisodeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EpisodeID
		{
			get
			{
				return this._EpisodeID;
			}
			set
			{
				if ((this._EpisodeID != value))
				{
					this.OnEpisodeIDChanging(value);
					this.SendPropertyChanging();
					this._EpisodeID = value;
					this.SendPropertyChanged("EpisodeID");
					this.OnEpisodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeriesID", DbType="Int NOT NULL")]
		public int SeriesID
		{
			get
			{
				return this._SeriesID;
			}
			set
			{
				if ((this._SeriesID != value))
				{
					if (this._Series.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSeriesIDChanging(value);
					this.SendPropertyChanging();
					this._SeriesID = value;
					this.SendPropertyChanged("SeriesID");
					this.OnSeriesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Season", DbType="Int NOT NULL")]
		public int Season
		{
			get
			{
				return this._Season;
			}
			set
			{
				if ((this._Season != value))
				{
					this.OnSeasonChanging(value);
					this.SendPropertyChanging();
					this._Season = value;
					this.SendPropertyChanged("Season");
					this.OnSeasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EpisodeNumber", DbType="Int NOT NULL")]
		public int EpisodeNumber
		{
			get
			{
				return this._EpisodeNumber;
			}
			set
			{
				if ((this._EpisodeNumber != value))
				{
					this.OnEpisodeNumberChanging(value);
					this.SendPropertyChanging();
					this._EpisodeNumber = value;
					this.SendPropertyChanged("EpisodeNumber");
					this.OnEpisodeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(MAX)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thumbnail", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Thumbnail
		{
			get
			{
				return this._Thumbnail;
			}
			set
			{
				if ((this._Thumbnail != value))
				{
					this.OnThumbnailChanging(value);
					this.SendPropertyChanging();
					this._Thumbnail = value;
					this.SendPropertyChanged("Thumbnail");
					this.OnThumbnailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoPath", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string VideoPath
		{
			get
			{
				return this._VideoPath;
			}
			set
			{
				if ((this._VideoPath != value))
				{
					this.OnVideoPathChanging(value);
					this.SendPropertyChanging();
					this._VideoPath = value;
					this.SendPropertyChanged("VideoPath");
					this.OnVideoPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Series_Episode", Storage="_Series", ThisKey="SeriesID", OtherKey="SeriesID", IsForeignKey=true)]
		public Series Series
		{
			get
			{
				return this._Series.Entity;
			}
			set
			{
				Series previousValue = this._Series.Entity;
				if (((previousValue != value) 
							|| (this._Series.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Series.Entity = null;
						previousValue.Episodes.Remove(this);
					}
					this._Series.Entity = value;
					if ((value != null))
					{
						value.Episodes.Add(this);
						this._SeriesID = value.SeriesID;
					}
					else
					{
						this._SeriesID = default(int);
					}
					this.SendPropertyChanged("Series");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Series")]
	public partial class Series : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SeriesID;
		
		private string _Name;
		
		private System.Data.Linq.Binary _BannerImg;
		
		private string _Summary;
		
		private EntitySet<Episode> _Episodes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSeriesIDChanging(int value);
    partial void OnSeriesIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBannerImgChanging(System.Data.Linq.Binary value);
    partial void OnBannerImgChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Series()
		{
			this._Episodes = new EntitySet<Episode>(new Action<Episode>(this.attach_Episodes), new Action<Episode>(this.detach_Episodes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeriesID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SeriesID
		{
			get
			{
				return this._SeriesID;
			}
			set
			{
				if ((this._SeriesID != value))
				{
					this.OnSeriesIDChanging(value);
					this.SendPropertyChanging();
					this._SeriesID = value;
					this.SendPropertyChanged("SeriesID");
					this.OnSeriesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannerImg", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary BannerImg
		{
			get
			{
				return this._BannerImg;
			}
			set
			{
				if ((this._BannerImg != value))
				{
					this.OnBannerImgChanging(value);
					this.SendPropertyChanging();
					this._BannerImg = value;
					this.SendPropertyChanged("BannerImg");
					this.OnBannerImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Series_Episode", Storage="_Episodes", ThisKey="SeriesID", OtherKey="SeriesID")]
		public EntitySet<Episode> Episodes
		{
			get
			{
				return this._Episodes;
			}
			set
			{
				this._Episodes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Episodes(Episode entity)
		{
			this.SendPropertyChanging();
			entity.Series = this;
		}
		
		private void detach_Episodes(Episode entity)
		{
			this.SendPropertyChanging();
			entity.Series = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Movies")]
	public partial class Movy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MovieID;
		
		private string _Title;
		
		private int _Year;
		
		private string _Summary;
		
		private int _Rating;
		
		private System.Data.Linq.Binary _Thumbnail;
		
		private string _VideoPath;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMovieIDChanging(int value);
    partial void OnMovieIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnRatingChanging(int value);
    partial void OnRatingChanged();
    partial void OnThumbnailChanging(System.Data.Linq.Binary value);
    partial void OnThumbnailChanged();
    partial void OnVideoPathChanging(string value);
    partial void OnVideoPathChanged();
    #endregion
		
		public Movy()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovieID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MovieID
		{
			get
			{
				return this._MovieID;
			}
			set
			{
				if ((this._MovieID != value))
				{
					this.OnMovieIDChanging(value);
					this.SendPropertyChanging();
					this._MovieID = value;
					this.SendPropertyChanged("MovieID");
					this.OnMovieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Int NOT NULL")]
		public int Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thumbnail", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Thumbnail
		{
			get
			{
				return this._Thumbnail;
			}
			set
			{
				if ((this._Thumbnail != value))
				{
					this.OnThumbnailChanging(value);
					this.SendPropertyChanging();
					this._Thumbnail = value;
					this.SendPropertyChanged("Thumbnail");
					this.OnThumbnailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoPath", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string VideoPath
		{
			get
			{
				return this._VideoPath;
			}
			set
			{
				if ((this._VideoPath != value))
				{
					this.OnVideoPathChanging(value);
					this.SendPropertyChanging();
					this._VideoPath = value;
					this.SendPropertyChanged("VideoPath");
					this.OnVideoPathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
